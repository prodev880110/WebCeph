{"version":3,"sources":["action/types.js","reduce/FileUpload/index.js","reduce/LowerStl/index.js","reduce/TreatmentPlan/index.js","reduce/UpperStl/index.js","reduce/XRay/index.js","api/http-common.js","api/index.js","reduce/sagas.js","reduce/store.js","components/FileUpload/index.js","components/LowerStl/index.js","components/UpperStl/index.js","components/XRay/index.js","components/TreatmentPlan/index.js","components/Settings/index.js","components/Header/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["GET_CASE_ID","GET_XRAY","SAVE_XRAY","GET_LOWER","SAVE_LOWER","GET_UPPER","SAVE_UPPER","initialState","case_id","lower_png","points","finally_xray","finally_lower","finally_upper","upper_png","xray","axios","create","baseURL","headers","upload","file","url","onUploadProgress","formData","FormData","append","http","post","saga","reducer","combineReducers","FileUpload","state","action","type","ACTION_TYPE","payload","data","LowerStl","status","image","TreatmentPlan","UpperStl","XRay","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","Content","Layout","Header","Footer","Sider","props","selectFile_xray","bind","upload_xray","selectFile_lower","upload_lower","selectFile_upper","upload_upper","selectedFiles_xray","undefined","selectedFiles_preview_xray","currentFile_xray","progress_xray","message_xray","fileInfos_xray","state_xray","selectedFiles_lower","selectedFiles_preview_lower","currentFile_lower","progress_lower","message_lower","fileInfos_lower","state_lower","selectedFiles_upper","selectedFiles_preview_upper","currentFile_upper","progress_upper","message_upper","fileInfos_upper","state_upper","GetCaseId","get","then","response","setState","event","this","target","files","reader","FileReader","readAsDataURL","onloadend","e","result","currentFile","UploadService","Math","round","loaded","total","message","catch","style","margin","overflow","className","Item","role","aria-valuenow","aria-valuemin","aria-valuemax","width","onChange","disabled","onClick","alt","src","Link","to","React","Component","connect","dispatch","WrapContainer","x_ray","console","log","Service","padding","minHeight","background","handleClick","document","location","href","App","HashRouter","Switch","Route","exact","path","component","Settings","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b3f015d8.chunk.js","sourcesContent":["\r\nexport const GET_CASE_ID = \"GET_CASE_ID\";\r\n// File Upload\r\nexport const SELETED_XRAY = \"SELETED_XRAY\";\r\nexport const SELETED_LOWER_STL = \"SELETED_LOWER_STL\";\r\nexport const SELETED_UPPER_STL = \"SELETED_UPPER_STL\";\r\n// XRay\r\nexport const GET_XRAY = \"GET_XRAY\";\r\nexport const SAVE_XRAY = \"SAVE_XRAY\";\r\n// Lower Stl\r\nexport const GET_LOWER = \"GET_LOWER\";\r\nexport const SAVE_LOWER = \"SAVE_LOWER\";\r\n// Upper Stl\r\nexport const GET_UPPER = \"GET_UPPER\";\r\nexport const SAVE_UPPER = \"SAVE_UPPER\";\r\n// Treatment Plan\r\n","import * as ACTION_TYPE from \"../../action/types\";\r\n\r\nconst initialState = {\r\n  case_id : 0,\r\n  \r\n};\r\n\r\nexport default function FileUpload(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.GET_CASE_ID:\r\n      \r\n      return { \r\n        ...state, \r\n        case_id: action.payload.data\r\n      };\r\n      \r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ACTION_TYPE from \"../../action/types\";\r\n\r\nconst initialState = {\r\n  lower_png : \"\",\r\n  points : []\r\n};\r\n\r\nexport default function LowerStl(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.GET_LOWER:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          lower_png: action.payload.data.image,\r\n          points: action.payload.data.points,\r\n        };\r\n      else\r\n        return { ...state };\r\n    case ACTION_TYPE.SAVE_LOWER:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          \r\n        };\r\n      else\r\n        return { ...state };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ACTION_TYPE from \"../../action/types\";\r\n\r\nconst initialState = {\r\n  finally_xray : \"\",\r\n  finally_lower : \"\",\r\n  finally_upper : \"\",\r\n};\r\n\r\nexport default function TreatmentPlan(state = initialState, action) {\r\n  switch (action.type) {\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ACTION_TYPE from \"../../action/types\";\r\n\r\nconst initialState = {\r\n  upper_png : \"\",\r\n  points : []\r\n};\r\n\r\nexport default function UpperStl(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.GET_UPPER:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          upper_png: action.payload.data.image,\r\n          points: action.payload.data.points,\r\n        };\r\n      else\r\n        return { ...state };\r\n    case ACTION_TYPE.SAVE_UPPER:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          \r\n        };\r\n      else\r\n        return { ...state };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ACTION_TYPE from \"../../action/types\";\r\n\r\nconst initialState = {\r\n  xray : \"\",\r\n  points : []\r\n};\r\n\r\nexport default function XRay(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.GET_XRAY:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          xray: action.payload.data.image,\r\n          points: action.payload.data.points,\r\n        };\r\n      else\r\n        return { ...state };\r\n    case ACTION_TYPE.SAVE_XRAY:\r\n      if(action.payload.data.status)\r\n        return { \r\n          ...state, \r\n          \r\n        };\r\n      else\r\n        return { ...state };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://127.0.0.1:8000\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"./http-common\";\r\n\r\nexport  const upload = (file, case_id, url, onUploadProgress) => {\r\n  let formData = new FormData();\r\n\r\n  formData.append(\"file\", file);\r\n  formData.append(\"case_id\", case_id);\r\n\r\n  return http.post(url, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress,\r\n  });\r\n}\r\n\r\nexport const getCaseId = () => {\r\n  return http.get(\"/api/get_case_id\");\r\n}\r\n\r\nexport const get_xray = (case_id) => {\r\n  let data = new FormData();\r\n  data.append(\"case_id\", case_id);\r\n  return http.post(\"/api/get_xray\", data, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    }\r\n  });\r\n}\r\n\r\n","import { put, spawn, debounce, call, takeLatest } from \"redux-saga/effects\";\r\nimport * as ACTION_TYPE from \"../action/types\";\r\nimport * as ACTION from \"../action/actions\";\r\n\r\n// import {getCaseId, get_xray, upload} from \"../api\";\r\n\r\n// function filterSearchFieldAction({ type, payload }) {\r\n//   return type === SEARCH_FIELD_CHANGE && payload.value.trim() !== \"\";\r\n// }\r\n\r\n// function* handleSearchFieldSaga(action) {\r\n//   yield put(bookListRequest(action.payload.value));\r\n// }\r\n\r\n// function* watchSearchFieldSaga() {\r\n//   yield debounce(1000, filterSearchFieldAction, handleSearchFieldSaga);\r\n// }\r\n\r\n// function* handleBookSearchSaga(action) {\r\n//   try {\r\n//     const data = yield call(bookListFetch, action.payload.search);\r\n//     yield put(bookListSuccess(data.docs));\r\n//   } catch (e) {\r\n//     yield put(bookListFailure(e.message));\r\n//   }\r\n// }\r\n\r\n// function* watchBookSearchSaga() {\r\n//   yield takeLatest(BOOK_LIST_REQUEST, handleBookSearchSaga);\r\n// }\r\n\r\nexport default function* saga() {\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport FileUploadReducer from \"../reduce/FileUpload\";\r\nimport LowerStlReducer from \"../reduce/LowerStl\";\r\nimport TreatmentPlanReducer from \"../reduce/TreatmentPlan\";\r\nimport UpperStlReducer from \"../reduce/UpperStl\";\r\nimport XRayReducer from \"../reduce/XRay\";\r\nimport saga from \"./sagas\";\r\n\r\nconst reducer = combineReducers({\r\n  FileUpload: FileUploadReducer,\r\n  LowerStl: LowerStlReducer,\r\n  TreatmentPlan: TreatmentPlanReducer,\r\n  UpperStl: UpperStlReducer,\r\n  XRay: XRayReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","\r\nimport React , { useState }  from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Breadcrumb, Layout, message} from 'antd';\r\nimport * as UploadService from \"../../api\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./index.css\";\r\nimport * as ACTION_TYPE from \"../../action/types\";\r\n\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nclass FileUpload extends React.Component{\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.selectFile_xray = this.selectFile_xray.bind(this);\r\n      this.upload_xray = this.upload_xray.bind(this);\r\n      this.selectFile_lower = this.selectFile_lower.bind(this);\r\n      this.upload_lower = this.upload_lower.bind(this);\r\n      this.selectFile_upper = this.selectFile_upper.bind(this);\r\n      this.upload_upper = this.upload_upper.bind(this);\r\n  \r\n      this.state = {\r\n        case_id: 0,\r\n\r\n        selectedFiles_xray: undefined,\r\n        selectedFiles_preview_xray: undefined,\r\n        currentFile_xray: undefined,\r\n        progress_xray: 0,\r\n        message_xray: \"\",\r\n        fileInfos_xray: [],\r\n        state_xray: false,\r\n        \r\n        selectedFiles_lower: undefined,\r\n        selectedFiles_preview_lower: undefined,\r\n        currentFile_lower: undefined,\r\n        progress_lower: 0,\r\n        message_lower: \"\",\r\n        fileInfos_lower: [],\r\n        state_lower: false,\r\n        \r\n        selectedFiles_upper: undefined,\r\n        selectedFiles_preview_upper: undefined,\r\n        currentFile_upper: undefined,\r\n        progress_upper: 0,\r\n        message_upper: \"\",\r\n        fileInfos_upper: [],\r\n        state_upper: false,\r\n      };\r\n\r\n      this.props.GetCaseId()\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n      UploadService.getCaseId().then((response) => {\r\n        this.setState({\r\n          case_id: response.data,\r\n        });\r\n        this.props.GetCaseId(response.data);\r\n      });\r\n    }\r\n  \r\n    //////    x-ray\r\n    selectFile_xray(event) {\r\n      this.setState({\r\n        selectedFiles_xray: event.target.files,\r\n      });\r\n      var file = event.target.files[0];\r\n      var reader = new FileReader();\r\n      if(file) reader.readAsDataURL(file);\r\n      else this.setState({\r\n        selectedFiles_preview_xray: \"\"\r\n      })\r\n      reader.onloadend = function (e) {\r\n          this.setState({\r\n              selectedFiles_preview_xray: [reader.result]\r\n          })\r\n        }.bind(this);\r\n    }\r\n  \r\n    upload_xray() {\r\n      let currentFile = this.state.selectedFiles_xray[0];\r\n  \r\n      this.setState({\r\n        progress_xray: 0,\r\n        currentFile_xray: currentFile,\r\n      });\r\n  \r\n      UploadService.upload(currentFile, this.state.case_id, \"api/file_upload_xray\", (event) => {\r\n        this.setState({\r\n          progress_xray: Math.round((100 * event.loaded) / event.total),\r\n        });\r\n      })\r\n        .then((response) => {\r\n          this.setState({\r\n            message_xray: response.data.message,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            progress_xray: 0,\r\n            message_xray: \"Could not upload the file!\",\r\n            currentFile_xray: undefined,\r\n          });\r\n        });\r\n  \r\n      this.setState({\r\n        selectedFiles_xray: undefined,\r\n      });\r\n    }\r\n    /////////   lower\r\n    selectFile_lower(event) {\r\n      this.setState({\r\n        selectedFiles_lower: event.target.files,\r\n      });\r\n      var file = event.target.files[0];\r\n      var reader = new FileReader();\r\n      if(file) reader.readAsDataURL(file);\r\n      else this.setState({\r\n        selectedFiles_preview_lower: \"\"\r\n      })\r\n      reader.onloadend = function (e) {\r\n          this.setState({\r\n              selectedFiles_preview_lower: [reader.result]\r\n          })\r\n        }.bind(this);\r\n    }\r\n  \r\n    upload_lower() {\r\n      let currentFile = this.state.selectedFiles_lower[0];\r\n  \r\n      this.setState({\r\n        progress_lower: 0,\r\n        currentFile_lower: currentFile,\r\n      });\r\n  \r\n      UploadService.upload(currentFile, this.state.case_id, \"api/file_upload_lower\", (event) => {\r\n        this.setState({\r\n          progress_lower: Math.round((100 * event.loaded) / event.total),\r\n        });\r\n      })\r\n        .then((response) => {\r\n          this.setState({\r\n            message_lower: response.data.message,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            progress_lower: 0,\r\n            message_lower: \"Could not upload the file!\",\r\n            currentFile_lower: undefined,\r\n          });\r\n        });\r\n  \r\n      this.setState({\r\n        selectedFiles_lower: undefined,\r\n      });\r\n    }\r\n    ///////  upper\r\n    selectFile_upper(event) {\r\n      this.setState({\r\n        selectedFiles_upper: event.target.files,\r\n      });\r\n      var file = event.target.files[0];\r\n      var reader = new FileReader();\r\n      if(file) reader.readAsDataURL(file);\r\n      else this.setState({\r\n        selectedFiles_preview_upper: \"\"\r\n      })\r\n      reader.onloadend = function (e) {\r\n          this.setState({\r\n              selectedFiles_preview_upper: [reader.result]\r\n          })\r\n        }.bind(this);\r\n      }\r\n  \r\n    upload_upper() {\r\n      let currentFile = this.state.selectedFiles_upper[0];\r\n  \r\n      this.setState({\r\n        progress_upper: 0,\r\n        currentFile_upper: currentFile,\r\n      });\r\n  \r\n      UploadService.upload(currentFile, this.state.case_id, \"api/file_upload_upper\", (event) => {\r\n        this.setState({\r\n          progress_upper: Math.round((100 * event.loaded) / event.total),\r\n        });\r\n      })\r\n        .then((response) => {\r\n          this.setState({\r\n            message_upper: response.data.message,\r\n          });\r\n          \r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            progress_upper: 0,\r\n            message_upper: \"Could not upload the file!\",\r\n            currentFile_upper: undefined,\r\n          });\r\n        });\r\n  \r\n      this.setState({\r\n        selectedFiles_upper: undefined,\r\n      });\r\n    }\r\n\r\n\r\n    render() {\r\n      const {\r\n        selectedFiles_xray,\r\n        selectedFiles_preview_xray,\r\n        currentFile_xray,\r\n        progress_xray,\r\n        message_xray,\r\n        fileInfos_xray,\r\n        state_xray,\r\n        selectedFiles_lower,\r\n        selectedFiles_preview_lower,\r\n        currentFile_lower,\r\n        progress_lower,\r\n        message_lower,\r\n        fileInfos_lower,\r\n        state_lower,\r\n        selectedFiles_upper,\r\n        selectedFiles_preview_upper,\r\n        currentFile_upper,\r\n        progress_upper,\r\n        message_upper,\r\n        fileInfos_upper,\r\n        state_upper,\r\n      } = this.state;\r\n      \r\n        return (\r\n            <Content style={{ margin: '24px 16px', overflow: 'initial' }}>\r\n              <Breadcrumb className=\"font-size-18\">\r\n                <Breadcrumb.Item>File Upload</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"row main-container\">\r\n                <div className=\"col-md-4 p-t-20\">\r\n                  {currentFile_xray && (\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow={progress_xray}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: progress_xray + \"%\" }}\r\n                      >\r\n                        {progress_xray}%\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <label className=\"btn btn-default\">\r\n                    <input type=\"file\" onChange={this.selectFile_xray} />\r\n                  </label>\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    disabled={!selectedFiles_xray}\r\n                    onClick={this.upload_xray}\r\n                  >\r\n                    X-Ray File Upload\r\n                  </button>\r\n\r\n                  <div className=\"alert alert-light\" role=\"alert\">\r\n                    {message_xray}\r\n                  </div>\r\n                  <div className=\"preview_image_div\">\r\n                    {selectedFiles_preview_xray ? (<img alt=\"previewImage\" src={selectedFiles_preview_xray}/>) : (\r\n                      <div className=\"text-center\">\r\n                        \r\n                      </div>\r\n                    )}\r\n                    \r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"col-md-4 p-t-20\">\r\n                  {currentFile_lower && (\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow={progress_lower}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: progress_lower + \"%\" }}\r\n                      >\r\n                        {progress_lower}%\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <label className=\"btn btn-default\">\r\n                    <input type=\"file\" onChange={this.selectFile_lower} />\r\n                  </label>\r\n                    \r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    disabled={!selectedFiles_lower}\r\n                    onClick={this.upload_lower}\r\n                  >\r\n                    Lower File Upload\r\n                  </button>\r\n\r\n                  <div className=\"alert alert-light\" role=\"alert\">\r\n                    {message_lower}\r\n                  </div>\r\n                  <div className=\"preview_image_div\">\r\n                    {selectedFiles_preview_lower ? (<img alt=\"previewImage\" src={selectedFiles_preview_lower}/>) : (\r\n                      <div className=\"text-center\">\r\n                        \r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"col-md-4 p-t-20\">\r\n                  {currentFile_upper && (\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow={progress_upper}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: progress_upper + \"%\" }}\r\n                      >\r\n                        {progress_upper}%\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <label className=\"btn btn-default\">\r\n                    <input type=\"file\" onChange={this.selectFile_upper} />\r\n                  </label>\r\n                    \r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    disabled={!selectedFiles_upper}\r\n                    onClick={this.upload_upper}\r\n                  >\r\n                    Upper File Upload\r\n                  </button>\r\n\r\n                  <div className=\"alert alert-light\" role=\"alert\">\r\n                    {message_upper}\r\n                  </div>\r\n                  <div className=\"preview_image_div\">\r\n                    {selectedFiles_preview_upper ? (<img alt=\"previewImage\" src={selectedFiles_preview_upper}/>) : (\r\n                      <div className=\"text-center\">\r\n                        \r\n                      </div>\r\n                    )}\r\n                    \r\n                  </div>\r\n                  {/* <div className=\"ant-upload ant-upload-select\">\r\n                    <span tabindex=\"0\" className=\"ant-upload\" role=\"button\">\r\n                      <input type=\"file\" accept=\"\" style={{display: \"none\"}}/>\r\n                      <div>\r\n                        <span role=\"img\" aria-label=\"plus\" className=\"anticon anticon-plus\">\r\n                          <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"plus\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                            <defs><style></style></defs>\r\n                            <path d=\"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\"></path>\r\n                            <path d=\"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\"></path>\r\n                          </svg>\r\n                        </span>\r\n                        <div style={{\"margin-top\": \"8px\"}}>Upload</div>\r\n                      </div>\r\n                    </span>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"col-md-12 row text-right p-t-20 p-b-20\">\r\n                  <div className=\"col-md-6\">\r\n                    <h3>CASE_ID: {this.state.case_id}</h3>\r\n                  </div>\r\n                  <img src=\"media/files/3b23ec5f4b.jfif\"/>\r\n                  <div className=\"col-md-6\">\r\n                    <Link to=\"/x_ray_adjustments\"> \r\n                      <button type=\"button\" className=\"btn btn-info color-white GoNext\"> Go To Next </button> \r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.FileUpload,\r\n  \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  GetCaseId: case_id => dispatch({ type: ACTION_TYPE.GET_CASE_ID, payload: {data: case_id} }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileUpload);","import { Breadcrumb, Layout} from 'antd';\r\nimport React , { useState }  from \"react\";\r\nimport \"./index.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nexport default class WrapContainer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '24px 16px', overflow: 'initial' }}>\r\n              <Breadcrumb className=\"font-size-18\">\r\n                <Breadcrumb.Item>Lower stl</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"row main-container\">\r\n                Lower stl\r\n                <div className=\"col-lg-12 row p-b-20\">\r\n                  <div className=\"col-md-6\">\r\n                    <Link to=\"/x_ray_adjustments\"> \r\n                      <button type=\"button\" className=\"btn btn-info color-white\"> Go To Prev </button> \r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-md-6 text-right\">\r\n                    <button type=\"button\" className=\"btn btn-info color-white\"> Save </button> \r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Link to=\"/upper_stl\"> \r\n                      <button type=\"button\" className=\"btn btn-info color-white\"> Go To Next </button> \r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n","import { Breadcrumb, Layout} from 'antd';\r\nimport React , { useState }  from \"react\";\r\nimport \"./index.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nexport default class WrapContainer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '24px 16px', overflow: 'initial' }}>\r\n              <Breadcrumb className=\"font-size-18\">\r\n                <Breadcrumb.Item>Upper stl</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"row main-container\">\r\n                Upper stl Image\r\n                <div className=\"col-lg-12 row p-b-20\">\r\n                  <div className=\"col-md-6 p-b-20\">\r\n                    <Link to=\"/lower_stl\"> \r\n                      <button type=\"button\" className=\"btn btn-info color-white\"> Go To Prev </button> \r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-md-6 text-right p-b-20\">\r\n                    <button type=\"button\" className=\"btn btn-info color-white\"> Save </button> \r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Link to=\"/treatment_plan\"> \r\n                      <button type=\"button\" className=\"btn btn-info color-white\"> Get treatment plan </button> \r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n","import { Breadcrumb, Layout} from 'antd';\r\nimport React , { useState }  from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport * as Service from \"../../api\";\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nclass XRay extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          x_ray: \"\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n      console.log(this.props.case_id);\r\n      Service.get_xray(this.props.case_id).then((response) => {\r\n        this.setState({\r\n          x_ray: response.data,\r\n        });\r\n        \r\n      });\r\n    }\r\n    render() {\r\n      const {x_ray} = this.state;\r\n        return (\r\n            <Content style={{ margin: '24px 16px', overflow: 'initial' }}>\r\n              <Breadcrumb className=\"font-size-18\">\r\n                <Breadcrumb.Item>X Ray adjustments</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"row main-container\">\r\n                <div className='col-md-12 row'>\r\n                  <div className='col-md-3'></div>\r\n                  <div className='col-md-6'>\r\n                    <img src={x_ray}/>\r\n                  </div>\r\n                  <div className='col-md-3'></div>\r\n                </div>\r\n                <div className=\"col-md-12 text-right p-b-20\">\r\n                  <button type=\"button\" className=\"btn btn-info color-white\"> Save </button> \r\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  <Link to=\"/lower_stl\"> \r\n                    <button type=\"button\" className=\"btn btn-info color-white\"> Go To Next </button> \r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  case_id : state.FileUpload.case_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XRay);","import { Breadcrumb, Layout} from 'antd';\r\nimport React , { useState }  from \"react\";\r\nimport \"./index.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nexport default class WrapContainer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '24px 16px', overflow: 'initial' }}>\r\n              <Breadcrumb className=\"font-size-18\">\r\n                <Breadcrumb.Item>Treatment plan</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"row main-container\">\r\n                Treatment plan\r\n                \r\n                <div className=\"col-md-12 p-b-20\">\r\n                  <Link to=\"/upper_stl\"> \r\n                    <button type=\"button\" className=\"btn btn-info color-white\"> Go To Prev </button> \r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n","import { Breadcrumb, Layout} from 'antd';\r\nimport React , { useState }  from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n  DesktopOutlined,\r\n  FileOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nexport default class WrapContainer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div style={{ padding: 24, minHeight: 360, background: \"#fff\" }}>\r\n                Bill is a cat.\r\n              </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./index.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(){\r\n    document.location.href = \"/\";\r\n  }\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"container\">\r\n          <div onClick={this.handleClick} className=\"p-t-20 p-b-20 font-size-header\" role=\"button\">WebCeph</div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {HashRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport { Layout, Menu, theme } from 'antd';\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport LowerStl from \"./components/LowerStl\";\r\nimport UpperStl from \"./components/UpperStl\";\r\nimport XRay from \"./components/XRay\";\r\nimport TreatmentPlan from \"./components/TreatmentPlan\";\r\nimport Settings from \"./components/Settings\";\r\nimport Header from \"./components/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst { Footer, Sider } = Layout;\r\nfunction App() {\r\n  return (\r\n    <>\r\n          <Header/>\r\n            <Layout>\r\n                \r\n                <Layout className=\"site-layout\">\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={FileUpload}/>\r\n                        <Route path=\"/file_upload\" component={FileUpload} />\r\n                        <Route path=\"/x_ray_adjustments\" component={XRay} />\r\n                        <Route path=\"/lower_stl\" component={LowerStl} />\r\n                        <Route path=\"/upper_stl\" component={UpperStl} />\r\n                        <Route path=\"/treatment_plan\" component={TreatmentPlan} />\r\n                        <Route path=\"/settings\" component={Settings} />\r\n                    </Switch>\r\n                </HashRouter>\r\n                  {/* <Footer style={{ textAlign: 'center' }}>---------------- Webceph ----------------</Footer> */}\r\n                </Layout>\r\n            </Layout>\r\n            \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./reduce/store\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorker.unregister();"],"sourceRoot":""}